{"version":3,"sources":["api.js","components/ImageBox.js","components/Theme.js","hooks/useLocalStorage.js","serverless-cloud-text.svg","App.js","index.js"],"names":["baseURL","window","location","origin","apiClient","a","url","body","method","fetch","res","json","ok","Error","message","ImageBox","imageId","removeImage","setOpenSnackbar","useCopyToClipboard","copyToClipboard","useState","width","setWidth","height","setHeight","imageUrl","useMemo","Grid","item","xs","Paper","elevation","variant","Box","p","display","gridTemplateColumns","gap","src","alt","loading","style","maxHeight","minHeight","borderRadius","Stack","justifyContent","direction","Typography","gutterBottom","IconButton","color","size","onClick","fontSize","container","spacing","TextField","type","onChange","e","target","value","placeholder","Button","startIcon","open","theme","createTheme","palette","mode","primary","main","secondary","components","MuiCssBaseline","styleOverrides","backgroundColor","padding","alignItems","flexDirection","MuiSnackbarContent","root","background","MuiButton","textTransform","MuiOutlinedInput","border","input","fontWeight","notchedOutline","useLocalStorage","key","initialValue","readValue","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","useEffect","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","MyImages","openSnackbar","uploading","setUploading","imagesIds","setImagesIds","uploadInputRef","useRef","file2Buffer","file","Promise","resolve","reader","FileReader","buffer","result","readAsArrayBuffer","onUpload","newId","split","pop","log","filter","id","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","textAlign","logo","mb","Container","margin","accept","files","ref","CircularProgress","current","click","mt","length","map","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da06e4b5.chunk.js","sourcesContent":["export const baseURL = `${window.location.origin}`;\n\nexport const apiClient = async ({ url = '', body, method = 'GET' }) => {\n  const res = await fetch(`${baseURL}/${url}`, {\n    method,\n    body,\n  });\n  const json = await res.json();\n  if (res.ok) {\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n};\n","import { baseURL } from '../api';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Grid, IconButton, Paper, Typography } from '@mui/material';\nimport { useCopyToClipboard } from 'react-use';\nimport { useMemo, useState } from 'react';\nimport CopyIcon from '@mui/icons-material/ContentCopy';\nimport DownloadIcon from '@mui/icons-material/DownloadRounded';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const ImageBox = ({ imageId, removeImage, setOpenSnackbar }) => {\n  const [, copyToClipboard] = useCopyToClipboard();\n  const [width, setWidth] = useState();\n  const [height, setHeight] = useState();\n\n  const imageUrl = useMemo(\n    () =>\n      `${baseURL}/${imageId}${width ? `?w=${width}` : ``}${\n        height ? `&h=${height}` : ``\n      }`,\n    [width, height, imageId],\n  );\n  const onCopy = () => {\n    setOpenSnackbar(true);\n    copyToClipboard(imageUrl);\n  };\n\n  const onOpen = () => {\n    window.open(imageUrl);\n  };\n\n  return (\n    <Grid item xs={6}>\n      <Paper elevation={0} variant='outlined' width='100%'>\n        <Box p={2}>\n          <Box display='grid' gridTemplateColumns='1fr 2fr' gap={2}>\n            <img\n              src={`${baseURL}/${imageId}`}\n              alt='serverless cloud images'\n              loading='lazy'\n              style={{\n                width: '100%',\n                maxHeight: 120,\n                minHeight: 120,\n                borderRadius: 6,\n              }}\n            />\n            <Stack justifyContent='space-between'>\n              <Box>\n                <Stack direction='row' justifyContent='space-between'>\n                  <Typography variant='subtitle2' gutterBottom>\n                    Image size\n                  </Typography>\n                  <IconButton\n                    color='secondary'\n                    size='small'\n                    onClick={() => removeImage(imageId)}\n                  >\n                    <CloseIcon fontSize='small' />\n                  </IconButton>\n                </Stack>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <TextField\n                      type='number'\n                      variant='outlined'\n                      onChange={(e) => setWidth(e.target.value)}\n                      size='small'\n                      style={{ width: '100%' }}\n                      placeholder='width'\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      type='number'\n                      variant='outlined'\n                      onChange={(e) => setHeight(e.target.value)}\n                      size='small'\n                      style={{ width: '100%' }}\n                      placeholder='height'\n                    />\n                  </Grid>\n                </Grid>\n              </Box>\n\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Button\n                    // variant='outlined'\n                    startIcon={<CopyIcon />}\n                    size='small'\n                    color='secondary'\n                    style={{ width: '100%' }}\n                    onClick={onCopy}\n                  >\n                    Copy URL\n                  </Button>\n                </Grid>\n                <Grid item xs={6}>\n                  <Button\n                    // variant='outlined'\n                    startIcon={<DownloadIcon />}\n                    size='small'\n                    color='secondary'\n                    style={{ width: '100%' }}\n                    onClick={onOpen}\n                  >\n                    Download Image\n                  </Button>\n                </Grid>\n              </Grid>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n};\n","import { createTheme } from '@mui/material';\n\nexport const theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#FD5750',\n    },\n    secondary: {\n      main: '#818181',\n    },\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: {\n          backgroundColor: 'black',\n          minHeight: '100vh',\n          padding: '40px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n        },\n      },\n    },\n    MuiSnackbarContent: {\n      styleOverrides: {\n        root: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 0,\n          background: '#4caf50',\n          color: '#fff',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          border: `1px solid #222222`,\n        },\n        input: {\n          padding: '8px 10px',\n          fontSize: 12,\n\n          '&::placeholder': {\n            color: '#818181',\n            fontWeight: 500,\n          },\n        },\n        notchedOutline: {\n          border: 'none',\n        },\n      },\n    },\n  },\n});\n","import { useEffect, useState } from 'react'\n\nfunction useLocalStorage(key, initialValue) {\n  const readValue = () => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error)\n      return initialValue\n    }\n  }\n  const [storedValue, setStoredValue] = useState(readValue)\n\n  const setValue = (value) => {\n    if (typeof window == 'undefined') {\n      console.warn(`Tried setting localStorage key \"${key}\" even though environment is not a client`)\n    }\n\n    try {\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      setStoredValue(newValue)\n\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${key}\":`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n\nexport default useLocalStorage\n","export default __webpack_public_path__ + \"static/media/serverless-cloud-text.70f41d4b.svg\";","import { useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Button, Container, Grid, Snackbar, Typography } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport UploadIcon from '@mui/icons-material/UploadRounded';\n\nimport { ImageBox } from './components/ImageBox';\nimport { theme } from './components/Theme';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport logo from './serverless-cloud-text.svg';\nimport { apiClient } from './api';\n\nconst MyImages = () => {\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [imagesIds, setImagesIds] = useLocalStorage('serverless-images', []);\n  const uploadInputRef = useRef();\n\n  const file2Buffer = (file) =>\n    new Promise((resolve) => {\n      const reader = new FileReader();\n      const readFile = function () {\n        const buffer = reader.result;\n        resolve(buffer);\n      };\n      reader.addEventListener('load', readFile);\n      reader.readAsArrayBuffer(file);\n    });\n\n  const onUpload = async (file) => {\n    setUploading(true);\n    try {\n      const body = await file2Buffer(file);\n      const res = await apiClient({\n        body,\n        method: 'PUT',\n      });\n\n      const newId = res?.url.split('/').pop();\n      console.log('newId', newId);\n      setImagesIds([newId, ...(imagesIds || [])]);\n    } catch (err) {}\n    setUploading(false);\n  };\n  const removeImage = (imageId) => {\n    setImagesIds(imagesIds.filter((id) => id !== imageId));\n  };\n  const closeSnackbar = () => setOpenSnackbar(false);\n  return (\n    <Box>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={1000}\n        onClose={closeSnackbar}\n        message='Image URL copied'\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      />\n\n      <Box textAlign='center'>\n        <img src={logo} alt='serverless cloud' />\n        <Typography\n          variant='h3'\n          color='#fff'\n          fontWeight='bold'\n          textAlign='center'\n          mb={15}\n        >\n          Host and resize images\n        </Typography>\n      </Box>\n      <Container>\n        <Box width={200} margin='auto' textAlign='center'>\n          <input\n            accept='image/*'\n            type='file'\n            style={{ display: 'none' }}\n            onChange={(e) => onUpload(e.target.files[0])}\n            ref={uploadInputRef}\n          />\n          {uploading ? (\n            <Box textAlign='center'>\n              <CircularProgress color='primary' />\n            </Box>\n          ) : (\n            <Button\n              variant='contained'\n              color='primary'\n              startIcon={<UploadIcon />}\n              onClick={() => uploadInputRef?.current?.click()}\n              size='large'\n              style={{ width: 200, height: 50 }}\n            >\n              Upload Image\n            </Button>\n          )}\n        </Box>\n        <Box mt={15}>\n          {imagesIds?.length ? (\n            <Grid container spacing={2}>\n              {imagesIds.map((imageId) => (\n                <ImageBox\n                  key={imageId}\n                  imageId={imageId}\n                  setOpenSnackbar={setOpenSnackbar}\n                  removeImage={removeImage}\n                />\n              ))}\n            </Grid>\n          ) : null}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <MyImages />\n  </ThemeProvider>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}